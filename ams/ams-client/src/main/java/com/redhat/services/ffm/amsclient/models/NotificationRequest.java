/*
 * Account Management Service API
 * Manage user subscriptions and clusters
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.redhat.services.ffm.amsclient.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.redhat.services.ffm.amsclient.models.TemplateParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * NotificationRequest
 */
@JsonPropertyOrder({
  NotificationRequest.JSON_PROPERTY_BCC_ADDRESS,
  NotificationRequest.JSON_PROPERTY_CLUSTER_ID,
  NotificationRequest.JSON_PROPERTY_CLUSTER_UUID,
  NotificationRequest.JSON_PROPERTY_INCLUDE_RED_HAT_ASSOCIATES,
  NotificationRequest.JSON_PROPERTY_INTERNAL_ONLY,
  NotificationRequest.JSON_PROPERTY_SUBJECT,
  NotificationRequest.JSON_PROPERTY_SUBSCRIPTION_ID,
  NotificationRequest.JSON_PROPERTY_TEMPLATE_NAME,
  NotificationRequest.JSON_PROPERTY_TEMPLATE_PARAMETERS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-21T14:46:15.841437+02:00[Europe/Prague]")
public class NotificationRequest {
  public static final String JSON_PROPERTY_BCC_ADDRESS = "bcc_address";
  private String bccAddress;

  public static final String JSON_PROPERTY_CLUSTER_ID = "cluster_id";
  private String clusterId;

  public static final String JSON_PROPERTY_CLUSTER_UUID = "cluster_uuid";
  private String clusterUuid;

  public static final String JSON_PROPERTY_INCLUDE_RED_HAT_ASSOCIATES = "include_red_hat_associates";
  private Boolean includeRedHatAssociates;

  public static final String JSON_PROPERTY_INTERNAL_ONLY = "internal_only";
  private Boolean internalOnly;

  public static final String JSON_PROPERTY_SUBJECT = "subject";
  private String subject;

  public static final String JSON_PROPERTY_SUBSCRIPTION_ID = "subscription_id";
  private String subscriptionId;

  public static final String JSON_PROPERTY_TEMPLATE_NAME = "template_name";
  private String templateName;

  public static final String JSON_PROPERTY_TEMPLATE_PARAMETERS = "template_parameters";
  private List<TemplateParameter> templateParameters = null;

  public NotificationRequest() { 
  }

  public NotificationRequest bccAddress(String bccAddress) {
    this.bccAddress = bccAddress;
    return this;
  }

   /**
   * Get bccAddress
   * @return bccAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BCC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBccAddress() {
    return bccAddress;
  }


  @JsonProperty(JSON_PROPERTY_BCC_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBccAddress(String bccAddress) {
    this.bccAddress = bccAddress;
  }


  public NotificationRequest clusterId(String clusterId) {
    this.clusterId = clusterId;
    return this;
  }

   /**
   * Get clusterId
   * @return clusterId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLUSTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClusterId() {
    return clusterId;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClusterId(String clusterId) {
    this.clusterId = clusterId;
  }


  public NotificationRequest clusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
    return this;
  }

   /**
   * Get clusterUuid
   * @return clusterUuid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CLUSTER_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getClusterUuid() {
    return clusterUuid;
  }


  @JsonProperty(JSON_PROPERTY_CLUSTER_UUID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setClusterUuid(String clusterUuid) {
    this.clusterUuid = clusterUuid;
  }


  public NotificationRequest includeRedHatAssociates(Boolean includeRedHatAssociates) {
    this.includeRedHatAssociates = includeRedHatAssociates;
    return this;
  }

   /**
   * Get includeRedHatAssociates
   * @return includeRedHatAssociates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INCLUDE_RED_HAT_ASSOCIATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIncludeRedHatAssociates() {
    return includeRedHatAssociates;
  }


  @JsonProperty(JSON_PROPERTY_INCLUDE_RED_HAT_ASSOCIATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeRedHatAssociates(Boolean includeRedHatAssociates) {
    this.includeRedHatAssociates = includeRedHatAssociates;
  }


  public NotificationRequest internalOnly(Boolean internalOnly) {
    this.internalOnly = internalOnly;
    return this;
  }

   /**
   * Get internalOnly
   * @return internalOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_INTERNAL_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getInternalOnly() {
    return internalOnly;
  }


  @JsonProperty(JSON_PROPERTY_INTERNAL_ONLY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInternalOnly(Boolean internalOnly) {
    this.internalOnly = internalOnly;
  }


  public NotificationRequest subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubject() {
    return subject;
  }


  @JsonProperty(JSON_PROPERTY_SUBJECT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubject(String subject) {
    this.subject = subject;
  }


  public NotificationRequest subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

   /**
   * Get subscriptionId
   * @return subscriptionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSubscriptionId() {
    return subscriptionId;
  }


  @JsonProperty(JSON_PROPERTY_SUBSCRIPTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  public NotificationRequest templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

   /**
   * Get templateName
   * @return templateName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TEMPLATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTemplateName() {
    return templateName;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  public NotificationRequest templateParameters(List<TemplateParameter> templateParameters) {
    this.templateParameters = templateParameters;
    return this;
  }

  public NotificationRequest addTemplateParametersItem(TemplateParameter templateParametersItem) {
    if (this.templateParameters == null) {
      this.templateParameters = new ArrayList<>();
    }
    this.templateParameters.add(templateParametersItem);
    return this;
  }

   /**
   * Get templateParameters
   * @return templateParameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEMPLATE_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<TemplateParameter> getTemplateParameters() {
    return templateParameters;
  }


  @JsonProperty(JSON_PROPERTY_TEMPLATE_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTemplateParameters(List<TemplateParameter> templateParameters) {
    this.templateParameters = templateParameters;
  }


  /**
   * Return true if this NotificationRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NotificationRequest notificationRequest = (NotificationRequest) o;
    return Objects.equals(this.bccAddress, notificationRequest.bccAddress) &&
        Objects.equals(this.clusterId, notificationRequest.clusterId) &&
        Objects.equals(this.clusterUuid, notificationRequest.clusterUuid) &&
        Objects.equals(this.includeRedHatAssociates, notificationRequest.includeRedHatAssociates) &&
        Objects.equals(this.internalOnly, notificationRequest.internalOnly) &&
        Objects.equals(this.subject, notificationRequest.subject) &&
        Objects.equals(this.subscriptionId, notificationRequest.subscriptionId) &&
        Objects.equals(this.templateName, notificationRequest.templateName) &&
        Objects.equals(this.templateParameters, notificationRequest.templateParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bccAddress, clusterId, clusterUuid, includeRedHatAssociates, internalOnly, subject, subscriptionId, templateName, templateParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NotificationRequest {\n");
    sb.append("    bccAddress: ").append(toIndentedString(bccAddress)).append("\n");
    sb.append("    clusterId: ").append(toIndentedString(clusterId)).append("\n");
    sb.append("    clusterUuid: ").append(toIndentedString(clusterUuid)).append("\n");
    sb.append("    includeRedHatAssociates: ").append(toIndentedString(includeRedHatAssociates)).append("\n");
    sb.append("    internalOnly: ").append(toIndentedString(internalOnly)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateParameters: ").append(toIndentedString(templateParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

