/*
 * Account Management Service API
 * Manage user subscriptions and clusters
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.redhat.services.ffm.amsclient.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RegistryCredentialPatchRequest
 */
@JsonPropertyOrder({
  RegistryCredentialPatchRequest.JSON_PROPERTY_ACCOUNT_ID,
  RegistryCredentialPatchRequest.JSON_PROPERTY_EXTERNAL_RESOURCE_ID,
  RegistryCredentialPatchRequest.JSON_PROPERTY_REGISTRY_ID,
  RegistryCredentialPatchRequest.JSON_PROPERTY_TOKEN,
  RegistryCredentialPatchRequest.JSON_PROPERTY_USERNAME
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-21T14:46:15.841437+02:00[Europe/Prague]")
public class RegistryCredentialPatchRequest {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private String accountId;

  public static final String JSON_PROPERTY_EXTERNAL_RESOURCE_ID = "external_resource_id";
  private String externalResourceId;

  public static final String JSON_PROPERTY_REGISTRY_ID = "registry_id";
  private String registryId;

  public static final String JSON_PROPERTY_TOKEN = "token";
  private String token;

  public static final String JSON_PROPERTY_USERNAME = "username";
  private String username;

  public RegistryCredentialPatchRequest() { 
  }

  public RegistryCredentialPatchRequest accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public RegistryCredentialPatchRequest externalResourceId(String externalResourceId) {
    this.externalResourceId = externalResourceId;
    return this;
  }

   /**
   * Get externalResourceId
   * @return externalResourceId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getExternalResourceId() {
    return externalResourceId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExternalResourceId(String externalResourceId) {
    this.externalResourceId = externalResourceId;
  }


  public RegistryCredentialPatchRequest registryId(String registryId) {
    this.registryId = registryId;
    return this;
  }

   /**
   * Get registryId
   * @return registryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REGISTRY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRegistryId() {
    return registryId;
  }


  @JsonProperty(JSON_PROPERTY_REGISTRY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRegistryId(String registryId) {
    this.registryId = registryId;
  }


  public RegistryCredentialPatchRequest token(String token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getToken() {
    return token;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setToken(String token) {
    this.token = token;
  }


  public RegistryCredentialPatchRequest username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUsername() {
    return username;
  }


  @JsonProperty(JSON_PROPERTY_USERNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUsername(String username) {
    this.username = username;
  }


  /**
   * Return true if this RegistryCredentialPatchRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RegistryCredentialPatchRequest registryCredentialPatchRequest = (RegistryCredentialPatchRequest) o;
    return Objects.equals(this.accountId, registryCredentialPatchRequest.accountId) &&
        Objects.equals(this.externalResourceId, registryCredentialPatchRequest.externalResourceId) &&
        Objects.equals(this.registryId, registryCredentialPatchRequest.registryId) &&
        Objects.equals(this.token, registryCredentialPatchRequest.token) &&
        Objects.equals(this.username, registryCredentialPatchRequest.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, externalResourceId, registryId, token, username);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RegistryCredentialPatchRequest {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    externalResourceId: ").append(toIndentedString(externalResourceId)).append("\n");
    sb.append("    registryId: ").append(toIndentedString(registryId)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

