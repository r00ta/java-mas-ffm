/*
 * Account Management Service API
 * Manage user subscriptions and clusters
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.redhat.services.ffm.amsclient.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TermsReviewResponse
 */
@JsonPropertyOrder({
  TermsReviewResponse.JSON_PROPERTY_ACCOUNT_ID,
  TermsReviewResponse.JSON_PROPERTY_ORGANIZATION_ID,
  TermsReviewResponse.JSON_PROPERTY_REDIRECT_URL,
  TermsReviewResponse.JSON_PROPERTY_TERMS_AVAILABLE,
  TermsReviewResponse.JSON_PROPERTY_TERMS_REQUIRED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-04-21T14:46:15.841437+02:00[Europe/Prague]")
public class TermsReviewResponse {
  public static final String JSON_PROPERTY_ACCOUNT_ID = "account_id";
  private String accountId;

  public static final String JSON_PROPERTY_ORGANIZATION_ID = "organization_id";
  private String organizationId;

  public static final String JSON_PROPERTY_REDIRECT_URL = "redirect_url";
  private String redirectUrl;

  public static final String JSON_PROPERTY_TERMS_AVAILABLE = "terms_available";
  private Boolean termsAvailable;

  public static final String JSON_PROPERTY_TERMS_REQUIRED = "terms_required";
  private Boolean termsRequired;

  public TermsReviewResponse() { 
  }

  public TermsReviewResponse accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAccountId() {
    return accountId;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }


  public TermsReviewResponse organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOrganizationId() {
    return organizationId;
  }


  @JsonProperty(JSON_PROPERTY_ORGANIZATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }


  public TermsReviewResponse redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Get redirectUrl
   * @return redirectUrl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_REDIRECT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRedirectUrl() {
    return redirectUrl;
  }


  @JsonProperty(JSON_PROPERTY_REDIRECT_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }


  public TermsReviewResponse termsAvailable(Boolean termsAvailable) {
    this.termsAvailable = termsAvailable;
    return this;
  }

   /**
   * Get termsAvailable
   * @return termsAvailable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMS_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTermsAvailable() {
    return termsAvailable;
  }


  @JsonProperty(JSON_PROPERTY_TERMS_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTermsAvailable(Boolean termsAvailable) {
    this.termsAvailable = termsAvailable;
  }


  public TermsReviewResponse termsRequired(Boolean termsRequired) {
    this.termsRequired = termsRequired;
    return this;
  }

   /**
   * Get termsRequired
   * @return termsRequired
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TERMS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getTermsRequired() {
    return termsRequired;
  }


  @JsonProperty(JSON_PROPERTY_TERMS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTermsRequired(Boolean termsRequired) {
    this.termsRequired = termsRequired;
  }


  /**
   * Return true if this TermsReviewResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TermsReviewResponse termsReviewResponse = (TermsReviewResponse) o;
    return Objects.equals(this.accountId, termsReviewResponse.accountId) &&
        Objects.equals(this.organizationId, termsReviewResponse.organizationId) &&
        Objects.equals(this.redirectUrl, termsReviewResponse.redirectUrl) &&
        Objects.equals(this.termsAvailable, termsReviewResponse.termsAvailable) &&
        Objects.equals(this.termsRequired, termsReviewResponse.termsRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, organizationId, redirectUrl, termsAvailable, termsRequired);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TermsReviewResponse {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    termsAvailable: ").append(toIndentedString(termsAvailable)).append("\n");
    sb.append("    termsRequired: ").append(toIndentedString(termsRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

